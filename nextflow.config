//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false

    // Stage 1: UCG Extraction parameters
    fasta = null

    // Stage 2: Alignment parameters
    ucg_dir = null
    mafft_threads = 4

    // Common parameters
    out_dir = "output"
    client_fields = null
    aws_image_prefix = null
    aws_queue = null
    disable_ping = false

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false

    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf,store_dir'

    wf {
        example_cmd = [
            "# Stage 1 only (UCG extraction):",
            "--fasta 'genome.fasta'",
            "",
            "# Stage 2 only (alignment):",
            "--ucg_dir 'ucg_output/'",
            "",
            "# Both stages:",
            "--fasta 'genome.fasta' --ucg_dir 'ucg_output/'",
        ]
        common_sha = "sha72f3517dd994984e0e2da0b97cb3f23f8540be4b"
        container_sha = "v1.0.0"
        agent = null
        epi2me_instance = null
        epi2me_user = null
    }
}

manifest {
    name            = 'microbion/wf-ubcg2'
    author          = 'Patrick De Marta - Microbion Srl'
    homePage        = 'https://github.com/microbion/wf-ubcg2'
    description     = 'Universal Bacterial Core Gene (UBCG2) extraction and phylogenetic supermatrix construction workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.0.0'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    withLabel:wftemplate {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    withLabel:wfucg {
        container = "patrickdemarta/wf-ubcg2:${params.wf.container_sha}"
        cpus = 4
        memory = '8GB'
    }
    withLabel:wfucgalign {
        container = "patrickdemarta/wf-ubcg2:${params.wf.container_sha}"
        cpus = 4
        memory = '4GB'
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:wftemplate {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:wfucg {
                container = "${params.aws_image_prefix}-wf-ubcg2:${params.wf.container_sha}"
                cpus = 4
                memory = '8GB'
            }
            withLabel:wfucgalign {
                container = "${params.aws_image_prefix}-wf-ubcg2:${params.wf.container_sha}"
                cpus = 4
                memory = '4GB'
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
